"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from datetime import timedelta
import os
from pathlib import Path

#! Environs
from environs import Env

env = Env()
env.read_env()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^arnpfgk&z89nmq+b*j^m!cd6_1kb_=)u@&vc)v&z0p6ni7iar'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

#! Site URL
SITE_URL = env("SITE_URL")


# Application definition

INSTALLED_APPS = [
    # admin
    "jazzmin",
    
    # django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # third party apps
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'drf_yasg',
    'corsheaders',
    
    # my apps
    "store.apps.StoreConfig",
    "userauths.apps.UserauthsConfig",
    "customer.apps.CustomerConfig",
    "api.apps.ApiConfig",
    "vendor.apps.VendorConfig",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    # django-cors-headers middleware
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


# static settings

STATIC_URL = '/static/'  # به جای 'static/' از '/' در اول استفاده کنیم تا مسیر بهتری داشته باشیم
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # با استفاده از os.path.join
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # استفاده از os.path.join برای مسیر static_root

# media settings

MEDIA_URL = '/media/'  # شبیه به static
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # استفاده از os.path.join برای سازگاری بیشتر

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#! custom configuration settings

#! jazzmin settings
JAZZMIN_SETTINGS = {
    # inja mitunim 'title' tab 'admin' ro moshakhas konim. 
    'site_title': 'Admin',
    
    # inja 'name panel admin' ro mizarim.
    'site_brand': 'E-commerce',
    
    'welcome_sign': "Welcome To Admin Panel",
    
    'copyright': "Udemy Django And React Build a Multi-vendor E-commerce Website",
    
    'show_sidebar': True, # default
    
    'show_ui_builder': True,
    
    # dar inja ma mitunim 'tartib har app va model har app' ro moshakhas konim.
    "order_with_respect_to": [
        "auth",
        "auth.Group",
        
        "userauths",
        "userauths.User",
        "userauths.Profile",
        
        "token_blacklist",
        "token_blacklist.OutStandingToken",
        "token_blacklist.BlackListedToken",
        
        "vendor",
        "vendor.Vendor",
        
        "store",
        "store.Category",
        "store.Product",
        "store.Gallery",
        "store.Specification",
        "store.Size",
        "store.Color",
    ],
    # inja ma mitunim baraye har kodum az 'model' biaim 'icon' bezarim.
    "icons": {
    "auth": "fas fa-user-shield",  # آیکون احراز هویت
    "auth.Group": "fas fa-users-cog",  # آیکون گروه‌ها

    "userauths": "fas fa-id-badge",  # آیکون ماژول احراز هویت کاربران
    "userauths.User": "fas fa-user",  # آیکون کاربران
    "userauths.Profile": "fas fa-address-card",  # آیکون پروفایل کاربر

    "token_blacklist": "fas fa-ban",  # آیکون بلاک لیست توکن‌ها
    "token_blacklist.OutStandingToken": "fas fa-key",  # آیکون توکن‌های برجسته
    "token_blacklist.BlackListedToken": "fas fa-exclamation-triangle",  # آیکون توکن‌های بلاک شده

    "vendor": "fas fa-store",  # آیکون ماژول فروشندگان
    "vendor.Vendor": "fas fa-store-alt",  # آیکون فروشنده

    "store": "fas fa-warehouse",  # آیکون فروشگاه
    "store.Category": "fas fa-tags",  # آیکون دسته‌بندی‌ها
    "store.Product": "fas fa-box-open",  # آیکون محصولات
    "store.Gallery": "fas fa-images",  # آیکون گالری تصاویر محصولات
    "store.Specification": "fas fa-list",  # آیکون مشخصات
    "store.Size": "fas fa-ruler-combined",  # آیکون اندازه‌ها
    "store.Color": "fas fa-palette",  # آیکون رنگ‌ها
}
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_color": "navbar-gray",
    "accent": "accent-primary",
    "navbar": "navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-primary",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "darkly",
    "dark_mode_theme": "slate",
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-outline-success"
    },
    "actions_sticky_top": False
}

# inja ma bayad baraye in ke oumadim model user ro khodemun sakhtim pas bayad begim biad az oun estefade kone.
AUTH_USER_MODEL = "userauths.User"

#! JWT configuration
SIMPLE_JWT = {
    
    # تنظیمات اصلی توکن و مدت زمان اعتبار آنها

    """
        تعیین مدت زمان اعتبار توکن دسترسی: این گزینه مشخص می‌کند که هر توکن دسترسی به مدت 30 دقیقه اعتبار دارد و پس از آن منقضی می‌شود.
    """
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    
    """
        مدت زمان اعتبار توکن تازه‌سازی 
        (Refresh Token): 
        این مقدار اعتبار توکن تازه‌سازی را ۵۰ روز تعیین کرده است. توکن تازه‌سازی می‌تواند یک توکن دسترسی جدید ایجاد کند.
    """
    'REFRESH_TOKEN_LIFETIME': timedelta(days=50),
    
    """
        چرخش توکن تازه‌سازی: اگر 
        True 
        باشد، هر بار که از یک توکن تازه‌سازی استفاده شود، توکن تازه‌سازی جدیدی ایجاد می‌شود و توکن قبلی را باطل می‌کند.
    """
    'ROTATE_REFRESH_TOKENS': True,
    
    """
        قرار دادن توکن‌های قدیمی در لیست سیاه: با فعال‌کردن این گزینه، توکن‌های تازه‌سازی قبلی پس از چرخش در لیست سیاه قرار می‌گیرند.
    """
    'BLACKLIST_AFTER_ROTATION': True,
    
    """
        عدم بروزرسانی تاریخ آخرین ورود: اگر 
        True 
        باشد، تاریخ آخرین ورود کاربر پس از احراز هویت به‌روز می‌شود.
    """
    'UPDATE_LAST_LOGIN': True,

    # تنظیمات رمزنگاری

    """
        الگوریتم رمزنگاری: این تنظیمات از الگوریتم 
        HS256 (الگوریتم HMAC با SHA-256) 
        برای رمزنگاری توکن استفاده می‌کند.
    """
    'ALGORITHM': 'HS256',

    # تنظیمات تایید اعتبار توکن

    """
        کلید تایید: در صورت استفاده از الگوریتم‌های غیر متقارن 
        (مانند RSA)،
        این کلید برای تایید اعتبار توکن استفاده می‌شود. برای 
        HS256 
        نیازی به آن نیست.
    """
    'VERIFYING_KEY': None,
    
    """
    مخاطب 
    (Audience):
    مشخص می‌کند که توکن برای کدام مخاطب‌ها قابل استفاده است. این ویژگی در ساختار توکن قرار می‌گیرد.
    """
    'AUDIENCE': None,
    
    """
        صادرکننده توکن: نام یا شناسه صادرکننده توکن را تعیین می‌کند که به‌عنوان یک روش اعتبارسنجی به‌کار می‌رود.
    """
    'ISSUER': None,
    
    """
        آدرس کلید عمومی 
        JWT: 
        آدرسی که از آن کلیدهای عمومی 
        JWT
        برای اعتبارسنجی توکن دریافت می‌شود.
    """
    'JWK_URL': None,
    
    """
        محدوده خطا: این مقدار به توکن‌ها اجازه می‌دهد تا برای مدت زمانی کوتاه پس از انقضا معتبر باشند، و محدوده خطا را در ثانیه تنظیم می‌کند.
    """
    'LEEWAY': 0,

    # تنظیمات هدر احراز هویت

    """
        نوع هدر احراز هویت: این تنظیم تعیین می‌کند که نوع هدر احراز هویت باید 
        Bearer 
        باشد.
    """
    'AUTH_HEADER_TYPES': ('Bearer',),
    
    """
        نام هدر احراز هویت: نام هدر 
        HTTP 
        که توکن در آن قرار دارد و باید در درخواست‌ها ارسال شود. به‌طور پیش‌فرض 
        HTTP_AUTHORIZATION 
        است.
    """
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    
    # تنظیمات کاربر در توکن
    
    """
        فیلد شناسه کاربر: فیلدی که برای ذخیره شناسه کاربر در توکن استفاده می‌شود 
        (به‌طور پیش‌فرض id).
    """
    'USER_ID_FIELD': 'id',
    
    """
        نام کلید شناسه کاربر در توکن: نامی که برای کلید شناسه کاربر در 
        payload 
        توکن استفاده می‌شود.
    """
    'USER_ID_CLAIM': 'user_id',
    
    """
        قانون احراز هویت کاربر: تابعی که قانون احراز هویت کاربر را تعیین می‌کند.
    """
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    # تنظیمات کلاس توکن و نوع توکن

    
    """
        کلاس توکن‌های احراز هویت: کلاس‌هایی که برای ایجاد توکن احراز هویت استفاده می‌شوند. در اینجا از کلاس 
        AccessToken 
        استفاده شده است.
    """
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    
    """
        نوع توکن: نام کلیدی که نوع توکن (مانند دسترسی یا تازه‌سازی) را مشخص می‌کند.
    """
    'TOKEN_TYPE_CLAIM': 'token_type',
    
    """
        کلاس کاربر توکن: کلاسی که کاربر توکن را مشخص می‌کند و برای کاربرانی که از توکن دسترسی به‌کار می‌روند.
    """
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    # تنظیمات شناسه توکن و توکن‌های لغزنده

    """
        شناسه منحصر به فرد توکن 
        (JTI): 
        کلید 
        jti 
        یک شناسه منحصر به فرد برای هر توکن است و برای شناسایی و مدیریت آنها به‌کار می‌رود.
    """
    'JTI_CLAIM': 'jti',


    """
        ادعای زمان انقضای توکن لغزنده: نام کلید در توکن لغزنده برای ذخیره زمان انقضای تازه‌سازی.
    """
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    
    """
        مدت زمان اعتبار توکن لغزنده: زمان انقضای توکن لغزنده که در اینجا ۵ دقیقه تعیین شده است.
    """
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    
    """
        مدت زمان تازه‌سازی توکن لغزنده: زمان انقضای توکن لغزنده برای تازه‌سازی که در اینجا ۱ روز است.
    """
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}


#! django-cors-headers configuration
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
]


#! Stripe Environs
STRIPE_PUBLIC_KEY = env("STRIPE_PUBLIC_KEY")
STRIPE_SECRET_KEY = env("STRIPE_SECRET_KEY")

#! Sending Email
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = env("EMAIL_HOST_USER")  # ایمیل ارسال‌کننده
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")  # رمز ایمیل (یا App Password)
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER 

#! Celery
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # آدرس Redis
CELERY_ACCEPT_CONTENT = ['json']  # فرمت داده‌ها
CELERY_TASK_SERIALIZER = 'json'  # فرمت ارسال داده‌ها به صورت JSON
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'  # برای ذخیره نتایج

